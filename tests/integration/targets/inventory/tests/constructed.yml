---
- name: Test constructed
  block:
    - name: Create imaginary VMs
      servicenow.itsm.configuration_item:
        name: "{{ resource_prefix }}-{{ item }}"
        sys_class_name: cmdb_ci_ec2_instance
        ip_address: 10.1.0.{{ item }}
        environment: "{{ (item % 2 == 0) | ansible.builtin.ternary('development', 'production') }}"
        other:
          fqdn: f{{ item }}.example.com
          guest_os_fullname: "{{ (item < 106) | ansible.builtin.ternary('OS0', 'OS1') }}"
          vm_inst_id: i{{ item }}
      loop: "{{ range(101, 109) | list }}"
      register: vms

    - name: Reload inventory
      ansible.builtin.include_tasks: ../tasks/refresh_inventory.yml

    - name: Make sure we have all expected groups
      ansible.builtin.assert:
        that:
          - groups.all | length == 8
          - groups.ungrouped | length == 0
          - groups.development | difference([resource_prefix] | product(["-102", "-104", "-106", "-108"]) | map('join') | list) == []
          - groups.production  | difference([resource_prefix] | product(["-101", "-103", "-105", "-107"]) | map('join') | list) == []
          - groups.os_OS1 | difference([resource_prefix] | product(["-106", "-107", "-108"]) | map('join') | list) == []
          - "'OS0' not in groups"

    - name: Check 106
      ansible.builtin.assert:
        that:
          - test_host_vars is defined
          - test_host_vars.ansible_host == "f106.example.com"
          - test_host_vars.name == resource_prefix + "-106"
          - test_host_vars.ip_address == "10.1.0.106"
          - test_host_vars.env == "Development"
      vars:
        test_host_vars: "{{ hostvars[resource_prefix + '-106'] }}"

    - name: Check 107
      ansible.builtin.assert:
        that:
          - test_host_vars is defined
          - test_host_vars.ansible_host == "f107.example.com"
          - test_host_vars.name == resource_prefix + "-107"
          - test_host_vars.ip_address == "10.1.0.107"
          - test_host_vars.env == "Production"
      vars:
        test_host_vars: "{{ hostvars[resource_prefix + '-107'] }}"

    - name: Check 108
      ansible.builtin.assert:
        that:
          - test_host_vars is defined
          - test_host_vars.ansible_host == "f108.example.com"
          - test_host_vars.name == resource_prefix + "-108"
          - test_host_vars.ip_address == "10.1.0.108"
          - test_host_vars.env == "Development"
      vars:
        test_host_vars: "{{ hostvars[resource_prefix + '-108'] }}"

  always:
    - name: Delete VMs
      servicenow.itsm.configuration_item:
        state: absent
        sys_id: "{{ item.record.sys_id }}"
      loop: "{{ vms.results }}"
      loop_control:
        label: "{{ item.record.name }}"
